INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.96s
INFO     translator memory limit: 3500 MB
INFO     translator command line string: /usr/bin/python3 /src/fd/builds/release/bin/translate/translate.py ./visitall-domain.pddl ./instances-optimal/visitall-instance8.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 6 rules.
Computing model... [0.010s CPU, 0.003s wall-clock]
286 relevant atoms
105 auxiliary atoms
391 final queue length
503 total queue pushes
Completing instantiation... [0.000s CPU, 0.003s wall-clock]
Instantiating: [0.010s CPU, 0.010s wall-clock]
Computing fact groups...
Finding invariants...
4 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.001s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.010s CPU, 0.003s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.002s wall-clock]
Reordering and filtering variables...
15 of 25 variables necessary.
0 of 1 mutex groups necessary.
80 of 80 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 15
Translator derived variables: 0
Translator facts: 53
Translator goal facts: 14
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 80
Translator axioms: 0
Translator task size: 365
Translator peak memory: 39472 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.020s CPU, 0.021s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.84s
INFO     search memory limit: 3500 MB
INFO     search command line string: /src/fd/builds/release/bin/downward --search 'astar(merge_and_shrink(merge_strategy=merge_sccs(order_of_sccs=topological,merge_selector=score_based_filtering(scoring_functions=[goal_relevance,dfp,total_order])),shrink_strategy=shrink_bisimulation(greedy=false)))' --internal-plan-file sas_plan < output.sas
[t=0s, 55860 KB] reading input...
[t=0s, 55860 KB] done reading input!
[t=0s, 56124 KB] Initializing merge-and-shrink heuristic...
[t=0s, 56124 KB] Running merge-and-shrink algorithm...
[t=0s, 56124 KB] Merge strategy options:
[t=0s, 56124 KB] Type: sccs
[t=0s, 56124 KB] Merge order of sccs: topological
[t=0.00400451s, 56124 KB] Merge strategy for merging within sccs: 
[t=0.00400451s, 56124 KB] Merge selector options:
[t=0.00400451s, 56124 KB] Name: score based filtering
[t=0.00400451s, 56124 KB] Merge scoring function:
[t=0.00400451s, 56124 KB] Name: goal relevance
[t=0.00400451s, 56124 KB] Merge scoring function:
[t=0.00400451s, 56124 KB] Name: dfp
[t=0.00400451s, 56124 KB] Merge scoring function:
[t=0.00400451s, 56124 KB] Name: total order
[t=0.00400451s, 56124 KB] Atomic transition system order: reverse level
[t=0.00400451s, 56124 KB] Product transition system order: new to old
[t=0.00400451s, 56124 KB] Consider product before atomic transition systems
[t=0.00400451s, 56124 KB] Random seed: -1

[t=0.00400451s, 56124 KB] Options related to size limits and shrinking: 
[t=0.00400451s, 56124 KB] Transition system size limit: 50000
[t=0.00400451s, 56124 KB] Transition system size limit right before merge: 50000
[t=0.00400451s, 56124 KB] Threshold to trigger shrinking right before merge: 50000

[t=0.00400451s, 56124 KB] Pruning unreachable states: yes
[t=0.00400451s, 56124 KB] Pruning irrelevant states: yes

[t=0.00400451s, 56124 KB] Label reduction disabled

[t=0.00400451s, 56124 KB] Main loop max time in seconds: inf

[t=0.00400451s, 56124 KB] ===============================================================================
[t=0.00400451s, 56124 KB] WARNING! You did not enable label reduction.
This may drastically reduce the performance of merge-and-shrink!
[t=0.00400451s, 56124 KB] ===============================================================================

[t=0.00400451s, 56124 KB] Building atomic transition systems... 
[t=0.00400451s, 56388 KB] M&S algorithm timer: 0.00400451s (after computation of atomic factors)

[t=0.00400451s, 56388 KB] Starting main loop without a time limit.
[t=0.00400451s, 56388 KB] building causal graph...done! [t=0s]
[t=0.00400451s, 56388 KB] SCCs of the causal graph:
[t=0.00400451s, 56388 KB] [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
[t=0.00400451s, 56388 KB] Only one single SCC
[t=0.00400451s, 56388 KB] Next pair of indices: (0, 1)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after computation of next merge)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after merging)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after pruning)

[t=0.00400451s, 56388 KB] Next pair of indices: (2, 15)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after computation of next merge)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after merging)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after pruning)

[t=0.00400451s, 56388 KB] Next pair of indices: (3, 16)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after computation of next merge)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after merging)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after pruning)

[t=0.00400451s, 56388 KB] Next pair of indices: (4, 17)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after computation of next merge)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after merging)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after pruning)

[t=0.00400451s, 56388 KB] Next pair of indices: (5, 18)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after computation of next merge)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after merging)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after pruning)

[t=0.00400451s, 56388 KB] Next pair of indices: (6, 19)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after computation of next merge)
[t=0.00400451s, 56388 KB] M&S algorithm main loop timer: 0s (after merging)
[t=0.00799252s, 56388 KB] M&S algorithm main loop timer: 0.00398801s (after pruning)

[t=0.00799252s, 56388 KB] Next pair of indices: (7, 20)
[t=0.00799252s, 56388 KB] M&S algorithm main loop timer: 0.00398801s (after computation of next merge)
[t=0.00799252s, 56556 KB] M&S algorithm main loop timer: 0.00398801s (after merging)
[t=0.00799252s, 56556 KB] M&S algorithm main loop timer: 0.00398801s (after pruning)

[t=0.00799252s, 56556 KB] Next pair of indices: (8, 21)
[t=0.00799252s, 56556 KB] M&S algorithm main loop timer: 0.00398801s (after computation of next merge)
[t=0.0119928s, 56736 KB] M&S algorithm main loop timer: 0.00798832s (after merging)
[t=0.0119928s, 56736 KB] M&S algorithm main loop timer: 0.00798832s (after pruning)

[t=0.0119928s, 56736 KB] Next pair of indices: (9, 22)
[t=0.0119928s, 56736 KB] M&S algorithm main loop timer: 0.00798832s (after computation of next merge)
[t=0.0159919s, 57200 KB] M&S algorithm main loop timer: 0.0119874s (after merging)
[t=0.0159919s, 57200 KB] M&S algorithm main loop timer: 0.0119874s (after pruning)

[t=0.0159919s, 57200 KB] Next pair of indices: (10, 23)
[t=0.0159919s, 57200 KB] M&S algorithm main loop timer: 0.0119874s (after computation of next merge)
[t=0.0199916s, 57956 KB] M&S algorithm main loop timer: 0.0159871s (after merging)
[t=0.0239919s, 57956 KB] M&S algorithm main loop timer: 0.0199874s (after pruning)

[t=0.0239919s, 57956 KB] Next pair of indices: (11, 24)
[t=0.0239919s, 57956 KB] M&S algorithm main loop timer: 0.0199874s (after computation of next merge)
[t=0.0359962s, 59492 KB] M&S algorithm main loop timer: 0.0319917s (after merging)
[t=0.0399924s, 59492 KB] M&S algorithm main loop timer: 0.0359879s (after pruning)

[t=0.0399924s, 59492 KB] Next pair of indices: (12, 25)
[t=0.0399924s, 59492 KB] M&S algorithm main loop timer: 0.0359879s (after computation of next merge)
[t=0.10799s, 60668 KB] M&S algorithm main loop timer: 0.103986s (after shrinking)
[t=0.12799s, 61664 KB] M&S algorithm main loop timer: 0.123986s (after merging)
[t=0.135991s, 61664 KB] M&S algorithm main loop timer: 0.131986s (after pruning)

[t=0.135991s, 61664 KB] Next pair of indices: (13, 26)
[t=0.135991s, 61664 KB] M&S algorithm main loop timer: 0.131986s (after computation of next merge)
[t=0.219989s, 63500 KB] M&S algorithm main loop timer: 0.215984s (after shrinking)
[t=0.243988s, 63500 KB] M&S algorithm main loop timer: 0.239984s (after merging)
[t=0.251988s, 63500 KB] M&S algorithm main loop timer: 0.247984s (after pruning)

[t=0.251988s, 63500 KB] Next pair of indices: (14, 27)
[t=0.251988s, 63500 KB] M&S algorithm main loop timer: 0.247984s (after computation of next merge)
[t=0.344191s, 64992 KB] M&S algorithm main loop timer: 0.340186s (after shrinking)
[t=0.367929s, 64992 KB] M&S algorithm main loop timer: 0.363924s (after merging)
[t=0.375911s, 64992 KB] M&S algorithm main loop timer: 0.371907s (after pruning)

[t=0.375911s, 64992 KB] End of merge-and-shrink algorithm, statistics:
[t=0.375911s, 64992 KB] Main loop runtime: 0.371907s
[t=0.375911s, 64992 KB] Maximum intermediate abstraction size: 49608
[t=0.375911s, 64992 KB] Final peak memory increase of merge-and-shrink algorithm: 8868 KB
[t=0.375911s, 64992 KB] Merge-and-shrink algorithm runtime: 0.375911s

[t=0.375911s, 64992 KB] Number of remaining factors: 1
[t=0.375911s, 64992 KB] Number of factors kept: 1
[t=0.375911s, 64992 KB] Done initializing merge-and-shrink heuristic.

[t=0.375911s, 64992 KB] Building successor generator...done!
[t=0.375911s, 64992 KB] peak memory difference for successor generator creation: 0 KB
[t=0.375911s, 64992 KB] time for successor generation creation: 0s
[t=0.375911s, 64992 KB] Variables: 15
[t=0.375911s, 64992 KB] FactPairs: 53
[t=0.375911s, 64992 KB] Bytes per state: 4
[t=0.375911s, 64992 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.375911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 18
[t=0.375911s, 64992 KB] g=0, 1 evaluated, 0 expanded
[t=0.375911s, 64992 KB] f = 18, 1 evaluated, 0 expanded
[t=0.375911s, 64992 KB] Initial heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 18
[t=0.375911s, 64992 KB] pruning method: none
[t=0.375911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 17
[t=0.375911s, 64992 KB] g=1, 2 evaluated, 1 expanded
[t=0.375911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 16
[t=0.375911s, 64992 KB] g=2, 11 evaluated, 3 expanded
[t=0.375911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 15
[t=0.375911s, 64992 KB] g=3, 14 evaluated, 4 expanded
[t=0.375911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 14
[t=0.375911s, 64992 KB] g=4, 17 evaluated, 5 expanded
[t=0.375911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 13
[t=0.375911s, 64992 KB] g=5, 22 evaluated, 6 expanded
[t=0.375911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 12
[t=0.375911s, 64992 KB] g=6, 25 evaluated, 7 expanded
[t=0.375911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 11
[t=0.375911s, 64992 KB] g=7, 28 evaluated, 8 expanded
[t=0.375911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 10
[t=0.375911s, 64992 KB] g=8, 32 evaluated, 9 expanded
[t=0.375911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 9
[t=0.375911s, 64992 KB] g=9, 34 evaluated, 10 expanded
[t=0.379911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 8
[t=0.379911s, 64992 KB] g=10, 36 evaluated, 11 expanded
[t=0.379911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 7
[t=0.379911s, 64992 KB] g=11, 39 evaluated, 12 expanded
[t=0.379911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 6
[t=0.379911s, 64992 KB] g=12, 41 evaluated, 13 expanded
[t=0.379911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 5
[t=0.379911s, 64992 KB] g=13, 142 evaluated, 60 expanded
[t=0.379911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 4
[t=0.379911s, 64992 KB] g=14, 144 evaluated, 61 expanded
[t=0.379911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 3
[t=0.379911s, 64992 KB] g=15, 149 evaluated, 62 expanded
[t=0.379911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 2
[t=0.379911s, 64992 KB] g=16, 152 evaluated, 63 expanded
[t=0.379911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 1
[t=0.379911s, 64992 KB] g=17, 155 evaluated, 64 expanded
[t=0.379911s, 64992 KB] New best heuristic value for merge_and_shrink(merge_strategy = merge_sccs(order_of_sccs = topological, merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order))), shrink_strategy = shrink_bisimulation(greedy = false)): 0
[t=0.379911s, 64992 KB] g=18, 158 evaluated, 65 expanded
[t=0.379911s, 64992 KB] Solution found!
[t=0.379911s, 64992 KB] Actual search time: 0.00400036s
move loc-x2-y2 loc-x2-y3 (1)
move loc-x2-y3 loc-x2-y2 (1)
move loc-x2-y2 loc-x3-y2 (1)
move loc-x3-y2 loc-x3-y3 (1)
move loc-x3-y3 loc-x3-y4 (1)
move loc-x3-y4 loc-x4-y4 (1)
move loc-x4-y4 loc-x4-y3 (1)
move loc-x4-y3 loc-x4-y2 (1)
move loc-x4-y2 loc-x4-y1 (1)
move loc-x4-y1 loc-x4-y0 (1)
move loc-x4-y0 loc-x3-y0 (1)
move loc-x3-y0 loc-x2-y0 (1)
move loc-x2-y0 loc-x2-y1 (1)
move loc-x2-y1 loc-x1-y1 (1)
move loc-x1-y1 loc-x1-y0 (1)
move loc-x1-y0 loc-x0-y0 (1)
move loc-x0-y0 loc-x0-y1 (1)
move loc-x0-y1 loc-x0-y2 (1)
[t=0.379911s, 64992 KB] Plan length: 18 step(s).
[t=0.379911s, 64992 KB] Plan cost: 18
[t=0.379911s, 64992 KB] Expanded 66 state(s).
[t=0.379911s, 64992 KB] Reopened 0 state(s).
[t=0.379911s, 64992 KB] Evaluated 159 state(s).
[t=0.379911s, 64992 KB] Evaluations: 159
[t=0.379911s, 64992 KB] Generated 214 state(s).
[t=0.379911s, 64992 KB] Dead ends: 0 state(s).
[t=0.379911s, 64992 KB] Expanded until last jump: 0 state(s).
[t=0.379911s, 64992 KB] Reopened until last jump: 0 state(s).
[t=0.379911s, 64992 KB] Evaluated until last jump: 1 state(s).
[t=0.379911s, 64992 KB] Generated until last jump: 0 state(s).
[t=0.379911s, 64992 KB] Number of registered states: 159
[t=0.379911s, 64992 KB] Int hash set load factor: 159/256 = 0.621094
[t=0.379911s, 64992 KB] Int hash set resizes: 8
[t=0.379911s, 64992 KB] Search time: 0.00400036s
[t=0.379911s, 64992 KB] Total time: 0.379911s
Solution found.
Peak memory: 64992 KB
Remove intermediate file output.sas
search exit code: 0

